<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Code | My Life, My Code]]></title>
  <link href="http://ageekymonk.github.io/blog/categories/code/atom.xml" rel="self"/>
  <link href="http://ageekymonk.github.io/"/>
  <updated>2014-06-05T08:56:01+10:00</updated>
  <id>http://ageekymonk.github.io/</id>
  <author>
    <name><![CDATA[Ramz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Make USB Bootable Disk From ISO File in Mac/OSX]]></title>
    <link href="http://ageekymonk.github.io/blog/2014/05/20/make-usb-bootable-disk-from-iso-file/"/>
    <updated>2014-05-20T12:51:51+10:00</updated>
    <id>http://ageekymonk.github.io/blog/2014/05/20/make-usb-bootable-disk-from-iso-file</id>
    <content type="html"><![CDATA[<p>Convert iso file to img</p>

<pre><code>hdiutil convert -format UDRW -o ~/path/to/target.img ~/path/to/ubuntu.iso
</code></pre>

<p>Insert the usb drive. Find the device number using</p>

<pre><code>diskutil list
</code></pre>

<p>Load the image to the right device. <em>(Replace N with the disk number from the last command)</em></p>

<pre><code>diskutil unmountDisk /dev/diskN 

sudo dd if=/path/to/downloaded.img of=/dev/rdiskN bs=1m

diskutil eject /dev/diskN
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UnPackaging Debian Source Package]]></title>
    <link href="http://ageekymonk.github.io/blog/2014/05/19/unpackaging-debian-source-package/"/>
    <updated>2014-05-19T11:25:23+10:00</updated>
    <id>http://ageekymonk.github.io/blog/2014/05/19/unpackaging-debian-source-package</id>
    <content type="html"><![CDATA[<p>If you have downloaded debian source package manually using wget, the easier way to unpackage is to use dpkg-source. Because it is not just untaring and placing the debian folder in the source folder. There might be some extra patches that need to be applied.</p>

<p>For any debian package, there will be three files</p>

<pre><code>1. package_name.dsc
2. package_name.orig.tar.gz
3. package_name.debian.tar.gz
</code></pre>

<p>To unpackage</p>

<pre><code>dpkg-source -x package_name.dsc
</code></pre>

<h5>Example:</h5>

<p>For squidguard package</p>

<pre><code>squidguard_1.5-1.dsc
squidguard_1.5.orig.tar.gz
squidguard_1.5-1.debian.tar.gz
</code></pre>

<p>To unpackage</p>

<pre><code>dpkg-source -x squidguard_1.5-1.dsc
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash: Extract Filename From Url / Pathname]]></title>
    <link href="http://ageekymonk.github.io/blog/2014/05/19/extract-filename-from-url-slash-path/"/>
    <updated>2014-05-19T10:52:42+10:00</updated>
    <id>http://ageekymonk.github.io/blog/2014/05/19/extract-filename-from-url-slash-path</id>
    <content type="html"><![CDATA[<p>Bash provides builtin functions to extract part of string.</p>

<h5>Some string manipulation operators are</h5>

<pre><code>1. '#' remove minimal matching prefixes
2. '##' remove maximal matching prefixes
3. '%' remove minimal matching suffixes
4. '%%' remove maximal matching suffixes
</code></pre>

<h5>Example1:</h5>

<pre><code>FN=/home/chaos/squidguard_1.5-1.dsc
echo ${FN##/*/} -&gt; Prints squidguard_1.5-1.dsc
echo ${FN#/*/}  -&gt; Prints chaos/squidguard_1.5-1.dsc
echo ${FN%/*}   -&gt; Prints /home/chaos
echo ${FN%%/*}  -&gt; Prints none. As it removes everything from first / till end. 
</code></pre>

<h5>Example2:</h5>

<pre><code>URL=http://ftp.de.debian.org/debian/pool/main/s/squidguard/squidguard_1.5-1.dsc
echo ${URL##*/} -&gt; Prints squidguard_1.5-1.dsc
echo ${URL#*//} -&gt; Prints ftp.de.debian.org/debian/pool/main/s/squidguard/squidguard_1.5-1.dsc
echo ${URL%/*}  -&gt; Prints http://ftp.de.debian.org/debian/pool/main/s/squidguard
echo ${URL%%/*} -&gt; Prints http:
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cscope Plugin for Sublime Text]]></title>
    <link href="http://ageekymonk.github.io/blog/2014/05/17/cscope-plugin-for-sublime-text/"/>
    <updated>2014-05-17T09:28:17+10:00</updated>
    <id>http://ageekymonk.github.io/blog/2014/05/17/cscope-plugin-for-sublime-text</id>
    <content type="html"><![CDATA[<p> For browsing large c/c++ code base, the best way is to use cscope. To integrate cscope with sublime text, we need a plugin called CscopeSublime</p>

<h5>Installation</h5>

<ol>
<li><p> Go to Preferences &ndash;> Package Control</p></li>
<li><p> Select: Install Package</p></li>
<li><p> Select: cscope</p></li>
</ol>


<h5>Configuration</h5>

<ol>
<li><p> To set the cscope path, Select &ldquo;Preferences &ndash;> Settings User&rdquo;, this will open preferences.sublime-settings file. Add the following line in that file.</p>

<pre><code>"CscopeSublime_executable": "/usr/local/bin/cscope"
</code></pre></li>
</ol>


<h5>Using in your project</h5>

<ol>
<li><p> Create Cscope Database at the root of the project</p>

<pre><code>find . -name "*" -print &gt; cscope.files

cscope -b -q
</code></pre></li>
</ol>


<p>  Now you are all set to go</p>

<h5>shortcuts</h5>

<pre><code>    command panel:  Ctrl + \ 
    Look up symbol: Ctrl + L  Ctrl + S
    Symbol Definition: Ctrl + L Ctrl + D
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoovaChilli: Setting Up MAC Based Authentication]]></title>
    <link href="http://ageekymonk.github.io/blog/2014/05/17/coovachilli-setting-up-mac-based-authentication/"/>
    <updated>2014-05-17T09:17:21+10:00</updated>
    <id>http://ageekymonk.github.io/blog/2014/05/17/coovachilli-setting-up-mac-based-authentication</id>
    <content type="html"><![CDATA[<p>  Coovachilli supports MAC Based authentication. It supports static list which could be configured at start time.</p>

<p> System Configuration:</p>

<p>OS                : Ubuntu 13.10</p>

<p>Coovachilli  : 1.3.1</p>

<p>Edit the configuration file in location /etc/chilli/defaults</p>

<pre><code>               HS_MACAUTHMODE=local

               HS_MACALLOW="00-11-22-33-44-55" 
</code></pre>

<p>Change the mac address with your required ones.</p>

<p>If you want to add multiple mac address, separate them by commas.</p>

<pre><code>HS_MACALLOW="00-11-22-33-44-55, 22-22-22-22-22-22"
</code></pre>
]]></content>
  </entry>
  
</feed>
